charMap :: []string {
    "X    X    X    X    X         X    ", // !
    "                                   ", // "
    "                                   ", // #
    "                                   ", // $
    "                                   ", // %
    "                                   ", // &
    "                                   ", // '
    "                                   ", // (
    "                                   ", // )
    "                                   ", // *
    "                                   ", // +
    "                                   ", // ,
    "                                   ", // -
    "                              X    ", // .
    "                                   ", // /

    "XXXXXX   XX   XX   XX   XX   XXXXXX", // 0
    "  X   XX    X    X    X    X   XXX ", // 1
    "XXXX     X    X  XX  X   X    XXXXX", // 2
    "XXXX     X    X XXX     X    XXXXX ", // 3
    "X   XX   XX   XXXXXX    X    X    X", // 4
    "XXXXXX    X    XXXX     X    XXXXX ", // 5
    " XXX X    X    XXXX X   XX   X XXX ", // 6
    "XXXXXX   X    X   X    X    X    X ", // 7
    " XXX X   XX   X XXX X   XX   X XXX ", // 8
    " XXX X   XX   X XXXX    X    X XXX ", // 9

    "                                   ", // :
    "                                   ", // ;
    "                                   ", // <
    "                                   ", // =
    "                                   ", // >
    "  XX  X  X    X   X    X        X  ", // ?
    "                                   ", // @

    " XXX X   XX   XXXXXXX   XX   XX   X", // A
    "XXXX X   XX   XXXXX X   XX   XXXXX ", // B
    " XXX X   XX    X    X    X   X XXX ", // C
    "XXXX X   XX   XX   XX   XX   XXXXX ", // D
    "XXXXXX    X    XXXXXX    X    XXXXX", // E
    "XXXXXX    X    XXXXX     X    X    ", // F
    " XXX X    X    X  XXX   XX   X XXX ", // G
    "X   XX   XX   XXXXXXX   XX   XX   X", // H
    " XXX   X    X    X    X    X   XXX ", // I
    "XXXXX    X    X    XX   XX   X XXX ", // J
    "X   XX  X X X  XX   X X  X  X X   X", // K
    "X    X    X    X    X    X    XXXXX", // L
    "X   XXX XXX X XX   XX   XX   XX   X", // M
    "X   XX   XXX  XX X XX  XXX   XX   X", // N
    " XXX X   XX   XX   XX   XX   X XXX ", // O
    "XXXX X   XX   XXXXX X    X    X    ", // P
    " XXX X   XX   XX   XX X XX  XX XXX ", // Q
    "XXXX X   XX   XXXXX X X  X  X X   X", // R
    "XXXXXX    X    XXXXX    X    XXXXXX", // S
    "XXXXX  X    X    X    X    X    X  ", // T
    "X   XX   XX   XX   XX   XX   X XXX ", // U
    "X   XX   XX   X X X  X X   X    X  ", // V
    "X   XX   XX   XX   XX X XX X X X X ", // W
    "X   XX   X X X   X   X X X   XX   X", // X
    "X   XX   X X X   X    X    X    X  ", // Y
    "XXXXX    X   X   X   X   X    XXXXX", // Z
    ""
}
/*
    " X X XX XXXXX XX XX X", // A
    "XX X XX XXX X XX XXX ", // B
    "XXXX  X  X  X  X  XXX", // C
    "XX X XX XX XX XX XXX ", // D
    "XXXX  X  XXXX  X  XXX", // E
    "XXXX  X  XXXX  X  X  ", // F
    "XXXX XX  XXXX XX XXXX", // G
    "X XX XX XXXXX XX XX X", // H
    " X  X  X  X  X  X  X ", // I
    "XXX X  X  X  X  X XX ", // J
    "X XX XX XXX X XX XX X", // K
    "X  X  X  X  X  X  XXX", // L
    "X XXXXXXXX XX XX XX X", // M
    " X X XX XX XX XX XX X", // N
    " X X XX XX XX XX X X ", // O
    "XXXX XX XXXXX  X  X  ", // P
    "XXXX XX XXXX  X  X  X", // Q
    "XX X XXX XXXX XX XX X", // R
    " XXX  X   X   X  XXX ", // S
    "XXX X  X  X  X  X  X ", // T
    "X XX XX XX XX XX XXXX", // U
    "X XX XX XX XX XX X X ", // V
    "X XX XX XX XX XXXXX X", // W
    "X XX XX X X X XX XX X", // X
    "X XX XX X X  X  X  X ", // Y
    "XX   X  XXX X  X   XX", // Z
    "                     ",
}
*/

Width  :: 5
Height :: 7

#library "libc"
#foreign libc {
    printf :: (fmt: *u8, args: #cvargs ..any) -> i32
    strlen :: (str: *u8) -> i32
}

no  :: "blank"

main :: fn(argc: i32, argv: **u8) -> i32 {
    if argc < 3 {
        printf("Usage: %s <emote> <text>\n".raw, argv[0])
        return 1
    }

    yes := argv[1]

    for i := 2; i < argc; i += 1 {
        for j := 0; j < Height; j += 1 {
            map := charMap[0]
            str := argv[i]
            for k := 0; k < strlen(str); k += 1 {
                char := str[k]

                index: u8
                if char > "Z" {
                   index = char -  (0x21 + 0x20)
                } else {
                    index = char - "!"
                }

                mask := charMap[index]

                for l := 0; l < Width; l += 1 {
                    printf(":%s:".raw, mask[l + (j*Width)] == "X" ? yes : no.raw)
                }

                printf(":%s:".raw, no.raw)
            }
            printf("\n".raw)
        }
        printf(":%s:\n".raw, no.raw)
    }

    return 0
}
